[versions]
android = "7.4.0"
kotlin = "1.8.0"
hilt = "2.45"
lifecycle = "2.5.1"
room = "2.5.0"
okhttp = "4.10.0"
mockk = "1.13.4"

[libraries]
android-core = "androidx.core:core-ktx:1.9.0"
timber = "com.jakewharton.timber:timber:5.0.1"
activity-compose = "androidx.activity:activity-compose:1.6.1"
kotlin-serialization = "org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1"
kotlin-coroutines-test = "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
coil-compose = "io.coil-kt:coil-compose:2.2.2"
junit = "junit:junit:4.13.2"
android-junit = "androidx.test.ext:junit:1.1.3"
expresso = "androidx.test.espresso:espresso-core:3.4.0"

hilt-gradlePlugin = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hilt" }

okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

lifecycle-compiler = { module = "androidx.lifecycle:lifecycle-compiler", version.ref = "lifecycle" }
lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
lifecycle-compose = "androidx.lifecycle:lifecycle-runtime-compose:2.6.0-alpha04"

compose-ui = "androidx.compose.ui:ui:1.3.3"
compose-ui-tooling = "androidx.compose.ui:ui-tooling:1.3.3"
compose-ui-tooling-preview = "androidx.compose.ui:ui-tooling-preview:1.3.3"
compose-material = "androidx.compose.material:material:1.3.1"

hilt = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }

retrofit = "com.squareup.retrofit2:retrofit:2.9.0"
retrofit-serialization = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0"

room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }

mockk-agent = { module = "io.mockk:mockk-agent", version.ref = "mockk" }
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockk" }

[plugins]
android-application = { id = "com.android.application", version.ref = "android" }
android-library = { id = "com.android.library", version.ref = "android" }
kotlin = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

[bundles]
compose = ["compose-ui", "compose-ui-tooling-preview", "compose-material"]
retrofit = ["retrofit", "retrofit-serialization"]
lifecycle = ["lifecycle-viewmodel", "lifecycle-viewmodel-compose", "lifecycle-compose"]
room = ["room-runtime", "room-ktx"]
okhttp = ["okhttp", "okhttp-loggingInterceptor"]
mockk = ["mockk-agent", "mockk-android"]